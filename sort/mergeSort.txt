public void sort(int[] array) {
	mergeSort(array, 0, array.length-1);
}

private void mergeSort(int[] array, int start, int end) {
	if (start < end) {
		int mid = (start + end) / 2;
		mergeSort(array, start, mid);
		mergeSort(array, mid+1, end);
		merge(array, start, mid+1, end);
	}
}

private void merge(int[] array, int start1, int start2, int end) {
	int p = 0, p1 = start1, p2 = start2;
	int[] temp = new int[end - start1 + 1];
	
	while(p1 < start2 && p2 <= end) {
		temp[p++] = (array[p1] > array[p2]) ? array[p2++] : array[p1++];
	}
	while(p1 < start2) temp[p++] = array[p1++];
	while(p2 <= end) temp[p++] = array[p2++];
	
	for (int i = 0; i < temp.length; i++) array[start1++] = temp[i];
}